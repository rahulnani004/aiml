# -*- coding: utf-8 -*-
"""Association Rules Titanic ship analysis (13-02-2025)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gkGQWVoQOF2FDJSC1OXZHv3EQZ_AwE7l
"""

#Install mlxtend library
!pip install mlxtend

#Import necessary libraries
import pandas as pd
import mlxtend
from mlxtend.frequent_patterns import apriori, association_rules
import matplotlib.pyplot as plt

titanic = pd.read_csv('/home/Titanic.csv')
titanic

titanic.info()

"""**observations**

* There are no null values
* All the columns are object data type and categorical in nature
* As the columns are categorical,we can adpot one-hot-encoding
"""

#Plot a bar chart to visualize the category of people on the ship
counts = titanic['Class'].value_counts()
plt.bar(counts.index, counts.values)

#Plot a bar chart to visualize the category of people on the ship
counts = titanic['Gender'].value_counts()
plt.bar(counts.index, counts.values)

#Plot a bar chart to visualize the category of people on the ship
counts = titanic['Age'].value_counts()
plt.bar(counts.index, counts.values)

#Plot a bar chart to visualize the category of people on the ship
counts = titanic['Survived'].value_counts()
plt.bar(counts.index, counts.values)

#perform one-hot encoding on categorical column
df = pd.get_dummies(titanic,dtype=int)
df.head()

df.info()

"""**Apriori Algorithm**"""

#Apply Apriori algorithm to get itemset combinations
frequent_itemsets = apriori(df, min_support=0.2, use_colnames=True)
frequent_itemsets

#Apply Apriori algorithm to get itemset combinations
frequent_itemsets = apriori(df, min_support=0.05, use_colnames=True)
frequent_itemsets

frequent_itemsets.info()

#Generate association rules with metrics
rules = association_rules(frequent_itemsets, metric="lift", min_threshold=1.0)
rules

rules.sort_values('lift',ascending=False)

"""**conclusions**

* Adult females travelling in 1st class survived most.
"""

import matplotlib.pyplot as plt
rules[['support','confidence','lift']].hist(figsize=(15,7))
plt.show()

